{"version":3,"sources":["actions/types.js","actions/index.js","pages/login/LoginForm.jsx","App.js","reportWebVitals.js","reducers/authReducer.js","reducers/index.js","configureStore.js","index.js"],"names":["LOGIN_SUCCEED","LOGIN_FAILED","login","username","password","dispatch","a","axios","post","res","succeedStatus","data","succeed","type","payload","connect","actions","props","useState","setUsername","setPassword","onSubmit","e","preventDefault","handleSubmit","onChange","target","value","BackendPage","App","exact","path","component","LoginForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","authReducer","state","action","combineReducers","auth","middlewares","ReduxThunk","createStore","rootReducer","applyMiddleware","ReactDOM","render","store","document","getElementById"],"mappings":"mQAAaA,EAAgB,eAChBC,EAAe,cCEfC,EAAQ,SAACC,EAAUC,GAAX,8CAAwB,WAAOC,GAAP,iBAAAC,EAAA,sEACzBC,IAAMC,KAAK,cAAe,CAAEL,WAAUC,aADb,OACrCK,EADqC,OAErCC,EAAgBD,EAAIE,KAAKC,QAE7BP,EADEK,EACO,CAAEG,KAAMb,EAAec,QAASJ,GAEhC,CAAEG,KAAMZ,EAAca,QAASJ,IANC,2CAAxB,uD,OC0BNK,cAAQ,KAAMC,EAAdD,EAzBG,SAACE,GACjB,MAAgCC,mBAAS,IAAzC,mBAAOf,EAAP,KAAiBgB,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOd,EAAP,KAAiBgB,EAAjB,KAQA,OACE,uBAAMC,SAAU,SAACC,GAAD,OAPG,SAACA,GACpBA,EAAEC,iBAEFN,EAAMf,MAAMC,EAAUC,GAICoB,CAAaF,IAApC,UACE,6CAEE,uBAAOG,SAAU,SAACH,GAAD,OAAOH,EAAYG,EAAEI,OAAOC,aAE/C,6CAEE,uBAAOF,SAAU,SAACH,GAAD,OAAOF,EAAYE,EAAEI,OAAOC,aAE/C,wBAAQd,KAAK,SAAb,0BCnBAe,EAAc,SAACX,GACnB,OACE,8BACE,4CAcSY,MATf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWJ,QCL/BM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCMCQ,MAXf,WAA4C,IAAvBC,EAAsB,uDAAd,KAAMC,EAAQ,uCACzC,OAAQA,EAAOhC,MACb,KAAKb,EAEL,KAAKC,EACH,OAAO4C,EAAO/B,QAChB,QACE,OAAO8B,ICNEE,cAAgB,CAC7BC,KAAMJ,ICAKK,EAAc,CAACC,KAEbC,cAAYC,EAAa,GAAIC,IAAe,WAAf,EAAmBJ,ICC/DK,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BvB,M","file":"static/js/main.bffa4630.chunk.js","sourcesContent":["export const LOGIN_SUCCEED = \"loginSucceed\";\r\nexport const LOGIN_FAILED = \"loginFailed\";\r\n","import axios from \"axios\";\r\nimport { LOGIN_SUCCEED, LOGIN_FAILED } from \"./types\";\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n  const res = await axios.post(\"/auth/login\", { username, password });\r\n  const succeedStatus = res.data.succeed;\r\n  if (succeedStatus) {\r\n    dispatch({ type: LOGIN_SUCCEED, payload: succeedStatus });\r\n  } else {\r\n    dispatch({ type: LOGIN_FAILED, payload: succeedStatus });\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions\";\r\n\r\nconst LoginForm = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.login(username, password);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <label>\r\n        username\r\n        <input onChange={(e) => setUsername(e.target.value)}></input>\r\n      </label>\r\n      <label>\r\n        password\r\n        <input onChange={(e) => setPassword(e.target.value)}></input>\r\n      </label>\r\n      <button type=\"submit\">submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default connect(null, actions)(LoginForm);\r\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport LoginForm from \"../src/pages/login/LoginForm\";\n\nconst BackendPage = (props) => {\n  return (\n    <div>\n      <h1>Backend</h1>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route exact path=\"/\" component={LoginForm}></Route>\n      <Route exact path=\"/backend\" component={BackendPage}></Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { LOGIN_SUCCEED, LOGIN_FAILED } from \"../actions/types\";\r\n\r\nfunction authReducer(state = null, action) {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCEED:\r\n      return action.payload; // true\r\n    case LOGIN_FAILED:\r\n      return action.payload; // false\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport const middlewares = [ReduxThunk];\r\n\r\nexport default createStore(rootReducer, {}, applyMiddleware(...middlewares));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./configureStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App></App>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}